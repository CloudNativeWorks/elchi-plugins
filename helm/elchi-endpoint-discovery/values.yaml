# Default values for elchi-endpoint-discovery
replicaCount: 1

image:
  repository: cloudnativeworks/elchi-endpoint-discovery
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  capabilities:
    drop:
    - ALL

# Elchi configuration
config:
  # Elchi token for authentication
  token: ""
  # Log configuration
  log:
    level: "info"
    format: "json"  # Use JSON format for production
    output: "stdout"
  # Kubernetes namespace to monitor (empty = all namespaces)
  namespace: ""

# Discovery interval in seconds
discoveryInterval: 30

# Environment variables from secrets/configmaps
envFrom: []
  # - secretRef:
  #     name: elchi-secrets
  # - configMapRef:
  #     name: elchi-config

# Additional environment variables
env: []
  # - name: CUSTOM_VAR
  #   value: "custom-value"

resources:
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 64Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    path: /metrics
    labels: {}

# Service configuration (optional)
service:
  enabled: false
  type: ClusterIP
  port: 8080